{
    "openapi": "3.0.2",
    "info": {
        "title": "Employee's cabinet",
        "version": "0.25.2",
        "description": "",
        "contact": {
            "name": "Yandex Practicum Students Team"
        }
    },
    "servers": [
        {
            "url": "https://ecabinet.acceleratorpracticum.ru/api/v1"
        }
    ],
    "paths": {
        "/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "The server is up and running"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "operationId": "health",
                "description": "Check if the server is up and running"
            }
        },
        "/users": {
            "get": {
                "parameters": [
                    {
                        "examples": {
                            "Limit example": {
                                "value": "50"
                            }
                        },
                        "name": "limit",
                        "description": "maximum number of results to return",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query",
                        "required": false
                    },
                    {
                        "examples": {
                            "Query": {
                                "value": "\"Иванов\""
                            }
                        },
                        "name": "query",
                        "description": "query to find by",
                        "schema": {
                            "maxLength": 150,
                            "type": "string"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "Page example": {
                                "value": "2"
                            }
                        },
                        "name": "page",
                        "description": "page number with results to return",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "query"
                    },
                    {
                        "examples": {
                            "SortByExample": {
                                "value": "\"alphabet\""
                            }
                        },
                        "name": "sort_by",
                        "description": "type of sort result by",
                        "schema": {
                            "default": "alphabet",
                            "enum": [
                                "alphabet",
                                "department"
                            ],
                            "type": "string"
                        },
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListUsersResponse"
                                }
                            }
                        },
                        "description": "Employees list response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "listUsers",
                "description": "Returns list of company employees sorted alphabetically (default) or by department"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddUserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "schema": {
                                    "format": "uri",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Employee created response, \nLocation header returns a new employee URL"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "addUser",
                "description": "Creates a new employe in the company"
            }
        },
        "/users/{user_id}": {
            "get": {
                "parameters": [
                    {
                        "name": "expanded",
                        "description": "whether to return detailed data on passports, contracts, vacations, etc. along with user data (default - no)",
                        "schema": {
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/GetUserResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/GetExpandedUserResponse"
                                        }
                                    ]
                                }
                            }
                        },
                        "description": "Employee response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "getUser",
                "description": "Returns the employee full data based on ID"
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutUserRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Employee updated response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "putUser"
            },
            "patch": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchUserRequest"
                            },
                            "examples": {
                                "Path example": {
                                    "value": {
                                        "grade": "2",
                                        "registration_address": "Moscow, Tverskaya street, building 32, apartment 17"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Employee updated response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "patchUser",
                "description": "Changes selected fields in the user structure based on ID"
            },
            "parameters": [
                {
                    "name": "user_id",
                    "description": "employee ID",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/users/{user_id}/contracts/{contract_id}": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetContractResponse"
                                }
                            }
                        },
                        "description": "Employee contract response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "getContract",
                "description": "Returns the employee's contract based on ID"
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutContractRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Employee contract updated response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "putContract",
                "description": "Replace the employee's contract data based on ID"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Employee contract deleted response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "deleteContract",
                "description": "Deletes the employee's contract based on ID"
            },
            "patch": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchContractRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Employee contract updated response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "patchContract",
                "description": "Changes selected fields in the employee's contract structure based on ID"
            },
            "parameters": [
                {
                    "name": "user_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "contract_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/users/{user_id}/educations": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ListEducationsResponse"
                                    }
                                }
                            }
                        },
                        "description": "Employee education list response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "listEducations",
                "description": "Returns list of employee's educations"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddEducationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "schema": {
                                    "format": "uri",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Employee education added response,\nLocation header returns a new employee education URL"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "addEducation",
                "description": "Creates a new employee education"
            },
            "parameters": [
                {
                    "name": "user_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/users/{user_id}/photo": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "image/*": {
                                "schema": {
                                    "format": "binary",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Employee photo response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "downloadPhoto"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "image/*": {
                            "schema": {
                                "format": "binary",
                                "type": "string"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "schema": {
                                    "format": "uri",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Photo uploaded response, \nLocation header returns photo URL"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "uploadPhoto"
            },
            "parameters": [
                {
                    "name": "user_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/users/{user_id}/passports": {
            "get": {
                "parameters": [
                    {
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListPassportsResponse"
                                }
                            }
                        },
                        "description": "List employee passports"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "listPassports",
                "description": "Returns list of employee's passport"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddPassportRequest"
                            }
                        }
                    },
                    "required": true
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "schema": {
                            "type": "integer"
                        },
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "schema": {
                                    "format": "uri",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Passport added response, \nLocation header returns a new employee passport URL"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "addPassport",
                "description": "Creates a new employee's passport"
            }
        },
        "/departments": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/Department"
                                            },
                                            {
                                                "required": [
                                                    "id",
                                                    "users_number",
                                                    "name"
                                                ]
                                            }
                                        ]
                                    }
                                },
                                "examples": {
                                    "Departments": {
                                        "value": [
                                            {
                                                "name": "HR department",
                                                "users_number": 5,
                                                "selected_users_number": 0,
                                                "id": 7
                                            },
                                            {
                                                "name": "Accounts department",
                                                "users_number": 4,
                                                "selected_users_number": 1,
                                                "id": 3
                                            }
                                        ]
                                    }
                                }
                            }
                        },
                        "description": "Departments list response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "listDepartments",
                "description": "Returns a list of company departments with the number of employees"
            }
        },
        "/login": {
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "headers": {
                            "Set-Cookie": {
                                "examples": {
                                    "ecabinet:token": {
                                        "value": "v4.public.eyJkYXRhIjoidGhpcyBpcyBhIHNpZ25lZCBtZXNzYWdlIiwiZXhwIjoiMjAyMi0wMS0wMVQwMDowMDowMCswMDowMCJ9v3Jt8mx_TdM2ceTGoqwrh4yDFn0XsHvvV_D0DtwQxVrJEBMl0F2caAdgnpKlt4p7xBnx1HcO-SPo8FPp214HDw"
                                    }
                                }
                            }
                        },
                        "description": "Successful authentication response: access token"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "operationId": "login",
                "description": "Authenticates a user and returns an access token on success"
            }
        },
        "/login/init-change-password": {
            "post": {
                "requestBody": {
                    "description": "Login (email) to get recovery key on email",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InitChangePasswordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Change password response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "operationId": "initChangePassword",
                "description": "Accepts a login and sends the key to change the password to the user email."
            }
        },
        "/users/{user_id}/contracts": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListContractsResponse"
                                }
                            }
                        },
                        "description": "Employee contracts list response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "listContracts",
                "description": "Returns list of employee's contracts"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddContractRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "schema": {
                                    "format": "uri",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Employee contract added response,\nLocation header returns a new employee contract URL"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "addContract",
                "description": "Creates a new employee's contract"
            },
            "parameters": [
                {
                    "name": "user_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/users/{user_id}/vacations": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ListVacationsResponse"
                                    }
                                }
                            }
                        },
                        "description": "Employee vacations list response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "listVacations",
                "description": "Returns list of employee's vacations"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddVacationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "schema": {
                                    "format": "uri",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Employee vacation added response, \nLocation header returns vacation URL"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "addVacation",
                "description": "Creates a new employee's vacation"
            },
            "parameters": [
                {
                    "name": "user_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/users/{user_id}/vacations/{vacation_id}": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetVacationResponse"
                                }
                            }
                        },
                        "description": "Employee vacation response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "getVacation",
                "description": "Returns the employee's vacation based on ID"
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutVacationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Vacation updated response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "putVacation",
                "description": "Replace the employee's vacation data based on ID"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Vacation deleted response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "deleteVacation",
                "description": "Deletes the employee's vacation based on ID"
            },
            "patch": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchVacationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Vacation updated response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "patchVacation",
                "description": "Changes selected fields in the employee's vacation structure based on ID"
            },
            "parameters": [
                {
                    "name": "user_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "vacation_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/users/{user_id}/trainings": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ListTrainingsResponse"
                                    }
                                }
                            }
                        },
                        "description": "Employee training list response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "listTrainings",
                "description": "Returns list of employee trainings"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddTrainingRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "schema": {
                                    "format": "uri",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Employee training added response,\nLocation header returns a new employee training URL"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "addTraining",
                "description": "Creates a new employee training"
            },
            "parameters": [
                {
                    "name": "user_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/users/{user_id}/trainings/{training_id}": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTrainingResponse"
                                }
                            }
                        },
                        "description": "Employee training response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "getTraining",
                "description": "Returns the employee training based on ID"
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutTrainingRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Employee training updated response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "putTraining",
                "description": "Replace the employee training data based on ID"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Employee training deleted response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "deleteTraining",
                "description": "Deletes the employee training based on ID"
            },
            "patch": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchTrainingRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Employee training updated response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "patchTraining",
                "description": "Changes selected fields in the employee training structure based on ID"
            },
            "parameters": [
                {
                    "name": "user_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "training_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/users/{user_id}/passports/{passport_id}/visas": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListVisasResponse"
                                }
                            }
                        },
                        "description": "List employee visas for this passport"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "listVisas",
                "description": "Returns list of employee's visas"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddVisaRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "schema": {
                                    "format": "uri",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Employee visa added response,\nLocation header returns a new employee visa URL"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "addVisa",
                "description": "Creates a new employee's visa"
            },
            "parameters": [
                {
                    "name": "user_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "passport_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/users/{user_id}/passports/{passport_id}/visas/{visa_id}": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetVisaResponse"
                                }
                            }
                        },
                        "description": "Employee visa response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "getVisa",
                "description": "Returns the employee's visa based on ID"
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutVisaRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Employee visa updated response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "putVisa",
                "description": "Replace the employee's visa data based on ID"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Employee visa deleted response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "deleteVisa",
                "description": "Deletes the employee's visa based on ID"
            },
            "patch": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchVisaRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Employee visa updated response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "patchVisa",
                "description": "Changes selected fields in the employee's visa structure based on ID"
            },
            "parameters": [
                {
                    "name": "user_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "passport_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "visa_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/users/{user_id}/scans/{scan_id}": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Scan"
                                }
                            }
                        },
                        "description": "Employee document scan response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "getScan",
                "description": "Returns the employee's document scan based on ID"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Employee scan deleted response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "deleteScan",
                "description": "Deletes the employee's document scan based on ID"
            },
            "parameters": [
                {
                    "name": "user_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "scan_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/users/{user_id}/scans": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ListScansResponse"
                                }
                            }
                        },
                        "description": "Employee scans list response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "listScans",
                "description": "Returns list of employee's document scans"
            },
            "post": {
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "type",
                                    "fileName"
                                ],
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "$ref": "#/components/schemas/ScanType"
                                    },
                                    "document_id": {
                                        "type": "integer"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "fileName": {
                                        "format": "binary",
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "headers": {
                            "Location": {
                                "schema": {
                                    "format": "uri",
                                    "type": "string"
                                }
                            }
                        },
                        "description": "Scan uploaded response, \nLocation header returns scan URL"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "uploadScan",
                "description": "Creates a new employee's document scan"
            },
            "parameters": [
                {
                    "name": "user_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/users/{user_id}/educations/{education_id}": {
            "get": {
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetEducationResponse"
                                }
                            }
                        },
                        "description": "Employee education response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "getEducation",
                "description": "Returns the employee education based on ID"
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutEducationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Employee education updated response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "putEducation",
                "description": "Replace the employee education data based on ID"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Employee education deleted response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "deleteEducation",
                "description": "Deletes the employee education based on ID"
            },
            "patch": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchEducationRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Employee education updated response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "patchEducation",
                "description": "Changes selected fields in the employee education structure based on ID"
            },
            "parameters": [
                {
                    "name": "user_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "education_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        },
        "/login/change-password": {
            "get": {
                "parameters": [
                    {
                        "examples": {
                            "Key": {
                                "value": "0LzQsNC80LAg0LzRi9C70LAg0YDQsNC80YM="
                            }
                        },
                        "name": "key",
                        "description": "a special key sent to the employee’s email",
                        "schema": {
                            "maxLength": 36,
                            "minLength": 36,
                            "type": "string"
                        },
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check a change password key response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "operationId": "checkKey",
                "description": "Checks a password change key that was sent to the user email"
            },
            "post": {
                "requestBody": {
                    "description": "A Key and a new password to change password",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Change password response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "operationId": "changePassword",
                "description": "Accepts a key and a new password and changes it."
            }
        },
        "/users/{user_id}/passports/{passport_id}": {
            "get": {
                "parameters": [
                    {
                        "name": "expanded",
                        "description": "whether to return visas along with user passport data (default - no)",
                        "schema": {
                            "default": false,
                            "type": "boolean"
                        },
                        "in": "query",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/GetPassportResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/GetExpandedPassportResponse"
                                        }
                                    ]
                                },
                                "examples": {
                                    "Internal passport example": {
                                        "value": {
                                            "id": 98,
                                            "number": "4011364219",
                                            "issued_date": "2016-05-15",
                                            "issued_by": "ТП № 28 отдела УФМС России по СПб и ЛО",
                                            "type": "internal",
                                            "has_scan": false,
                                            "visas_count": 1
                                        }
                                    },
                                    "Foreigners passport example (expanded)": {
                                        "value": {
                                            "id": 75,
                                            "visas": [
                                                {
                                                    "id": 3,
                                                    "number": "33592222",
                                                    "issued_state": "Russia",
                                                    "valid_to": "2017-09-22",
                                                    "valid_from": "2018-09-22",
                                                    "number_entries": "mult",
                                                    "has_scan": true
                                                }
                                            ],
                                            "number": "33592222",
                                            "issued_date": "2016-05-15",
                                            "issued_by": "Washington D.C. U.S.A.",
                                            "type": "foreigners",
                                            "has_scan": false,
                                            "visas_count": 1
                                        }
                                    },
                                    "Internal passport example (expanded)": {
                                        "value": {
                                            "id": 98,
                                            "visas": [
                                                {
                                                    "id": 9,
                                                    "number": "33592222",
                                                    "issued_state": "Germany",
                                                    "valid_to": "2017-09-22",
                                                    "valid_from": "2017-10-08",
                                                    "number_entries": "2",
                                                    "has_scan": false
                                                }
                                            ],
                                            "number": "4011364219",
                                            "issued_date": "2016-05-15",
                                            "issued_by": "ТП № 28 отдела УФМС России по СПб и ЛО",
                                            "type": "internal",
                                            "has_scan": false,
                                            "visas_count": 1
                                        }
                                    }
                                }
                            }
                        },
                        "description": "Employee passport response"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "getPassport",
                "description": "Returns the employee's passport based on ID"
            },
            "put": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PutPassportRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Employee passport updated response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "putPassport",
                "description": "Replace the employee's passport data based on ID"
            },
            "delete": {
                "responses": {
                    "200": {
                        "description": "Employee passport deleted response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "deletePassport",
                "description": "Deletes the employee's passport based on ID"
            },
            "patch": {
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchPassportRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Employee passport updated response (empty)"
                    },
                    "default": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        },
                        "description": "The server returned an error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "operationId": "patchPassport",
                "description": "Changes selected fields in the employee's passport structure based on ID"
            },
            "parameters": [
                {
                    "name": "user_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                },
                {
                    "name": "passport_id",
                    "schema": {
                        "type": "integer"
                    },
                    "in": "path",
                    "required": true
                }
            ]
        }
    },
    "components": {
        "schemas": {
            "Error": {
                "required": [
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Military": {
                "description": "",
                "required": [
                    "has_scan",
                    "speciality",
                    "rank",
                    "comissariat",
                    "category"
                ],
                "type": "object",
                "properties": {
                    "rank": {
                        "description": "",
                        "maxLength": 150,
                        "type": "string"
                    },
                    "speciality": {
                        "description": "",
                        "maxLength": 7,
                        "minLength": 6,
                        "type": "string"
                    },
                    "category": {
                        "description": "",
                        "maxLength": 2,
                        "minLength": 1,
                        "type": "string"
                    },
                    "comissariat": {
                        "description": "",
                        "maxLength": 150,
                        "type": "string"
                    },
                    "has_scan": {
                        "description": "",
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "example": {
                    "rank": "Старший лейтенант",
                    "speciality": "101182",
                    "category": "А2",
                    "comissariat": "Военный комиссариат Петроградского района г. Санкт-Петербурга",
                    "has_scan": true
                }
            },
            "WorkPermit": {
                "description": "",
                "required": [
                    "valid_to",
                    "valid_from",
                    "number",
                    "has_scan"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "type": "string"
                    },
                    "valid_to": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "valid_from": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "has_scan": {
                        "description": "",
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "example": {
                    "number": "77121034092",
                    "valid_to": "2013-09-05",
                    "has_scan": true
                }
            },
            "Taxpayer": {
                "description": "",
                "required": [
                    "number",
                    "has_scan"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "maxLength": 12,
                        "minLength": 10,
                        "type": "string",
                        "example": ""
                    },
                    "has_scan": {
                        "description": "",
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "example": {
                    "number": "500100732259",
                    "has_scan": true
                }
            },
            "Insurance": {
                "description": "",
                "required": [
                    "has_scan",
                    "number"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "maxLength": 11,
                        "minLength": 11,
                        "type": "string"
                    },
                    "has_scan": {
                        "description": "",
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "example": {
                    "number": "08336732477",
                    "has_scan": true
                }
            },
            "PersonalDataProcessing": {
                "description": "",
                "required": [
                    "has_scan"
                ],
                "type": "object",
                "properties": {
                    "has_scan": {
                        "description": "",
                        "type": "boolean"
                    }
                },
                "example": {
                    "has_scan": true
                }
            },
            "ScanType": {
                "description": "",
                "default": "other",
                "enum": [
                    "passport",
                    "taxpayer",
                    "insurance",
                    "contract",
                    "personal_data_processing",
                    "military",
                    "marriage",
                    "baby_birth",
                    "education",
                    "briefing",
                    "training",
                    "work_permit",
                    "other"
                ],
                "type": "string"
            },
            "WorkingModel": {
                "description": "",
                "enum": [
                    "remote",
                    "hybrid",
                    "in-office"
                ],
                "type": "string"
            },
            "UserFinance": {
                "description": "",
                "required": [
                    "income_tax",
                    "salary",
                    "social_security_tax"
                ],
                "type": "object",
                "properties": {
                    "salary": {
                        "format": "int64",
                        "description": "gross salary per month, in their minor unit form",
                        "type": "integer",
                        "readOnly": true
                    },
                    "social_security_tax": {
                        "format": "int64",
                        "description": "tax paid to social services per month, in their minor unit form",
                        "type": "integer",
                        "readOnly": true
                    },
                    "income_tax": {
                        "format": "int64",
                        "description": "tax paid to revenue service per month, in their minor unit form",
                        "type": "integer",
                        "readOnly": true
                    }
                }
            },
            "InitChangePasswordRequest": {
                "description": "",
                "required": [
                    "login"
                ],
                "type": "object",
                "properties": {
                    "login": {
                        "format": "email",
                        "description": "employee login (email)",
                        "maxLength": 50,
                        "minLength": 5,
                        "type": "string"
                    }
                },
                "example": {
                    "login": "vasyapp@gazneft.ru"
                }
            },
            "ListUsersItem": {
                "description": "",
                "required": [
                    "id",
                    "first_name",
                    "last_name",
                    "middle_name",
                    "position",
                    "department",
                    "phone_numbers",
                    "email"
                ],
                "type": "object",
                "properties": {
                    "first_name": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "last_name": {
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "middle_name": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "position": {
                        "description": "",
                        "type": "string"
                    },
                    "department": {
                        "description": "",
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "phone_numbers": {
                        "$ref": "#/components/schemas/PhoneNumbers",
                        "description": "",
                        "maxLength": 15,
                        "minLength": 2
                    },
                    "id": {
                        "description": "",
                        "type": "integer"
                    }
                },
                "example": {
                    "id": 1,
                    "first_name": "Alexander",
                    "last_name": "Pushkin",
                    "middle_name": "Sergeyevich",
                    "position": "Novelist",
                    "department": "Collegium of Foreign Affairs",
                    "email": "pushkin@dantes.net",
                    "phone_numbers": [
                        {
                            "number": "799183712345",
                            "type": "mobile"
                        },
                        {
                            "number": "1837",
                            "type": "office"
                        }
                    ]
                }
            },
            "ListUsersResponse": {
                "description": "",
                "required": [
                    "users",
                    "total_users",
                    "total_pages",
                    "current_page"
                ],
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ListUsersItem"
                        }
                    },
                    "total_users": {
                        "description": "total employee count in company",
                        "type": "integer"
                    },
                    "total_pages": {
                        "description": "total pages count (based on current limit parameter)",
                        "type": "integer"
                    },
                    "current_page": {
                        "description": "current page number (based on current limit parameter)",
                        "type": "integer"
                    }
                },
                "example": {
                    "users": [
                        {
                            "first_name": "Alexander",
                            "last_name": "Pushkin",
                            "middle_name": "Sergeyevich",
                            "position": "Novelist",
                            "department": "Collegium of Foreign Affairs",
                            "email": "pushkin@dantes.net",
                            "phone_numbers": {
                                "mobile": "79999999999",
                                "office": "123456"
                            }
                        },
                        {
                            "first_name": "Nikolai",
                            "last_name": "Gogol",
                            "middle_name": "Vasilievich",
                            "position": "Playwright",
                            "department": "Third Section of His Imperial Majesty's Own Chancellery",
                            "email": "gogol@fire.net",
                            "phone_numbers": {
                                "mobile": "79999999999",
                                "office": "123456"
                            }
                        }
                    ],
                    "current_page": 2,
                    "total_pages": 2,
                    "total_users": 16
                }
            },
            "LoginRequest": {
                "description": "",
                "required": [
                    "login",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "login": {
                        "format": "email",
                        "description": "employee login (email)",
                        "maxLength": 50,
                        "minLength": 5,
                        "type": "string",
                        "example": "anna@gazneft.ru"
                    },
                    "password": {
                        "format": "password",
                        "description": "employee password",
                        "maxLength": 15,
                        "minLength": 8,
                        "type": "string",
                        "example": "pa$$word"
                    }
                }
            },
            "AddContractRequest": {
                "description": "",
                "required": [
                    "number",
                    "type",
                    "work_type_id",
                    "date_from"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ContractType",
                        "description": ""
                    },
                    "work_type_id": {
                        "type": "integer",
                        "description": ""
                    },
                    "probation_period": {
                        "type": "integer",
                        "description": ""
                    },
                    "date_from": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "date_to": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    }
                },
                "example": {
                    "number": "145678",
                    "type": "temporary",
                    "date_from": "2018-01-17",
                    "work_type_id": 3,
                    "probation_period": 3,
                    "date_to": "2020-01-17"
                }
            },
            "ListContractsResponse": {
                "description": "",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Contract"
                }
            },
            "GetContractResponse": {
                "description": "",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Contract"
                    }
                ]
            },
            "ListEducationsResponse": {
                "description": "",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Education"
                }
            },
            "GetEducationResponse": {
                "description": "",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Education"
                    }
                ]
            },
            "ListVisasResponse": {
                "description": "",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Visa"
                }
            },
            "ListPassportsResponse": {
                "description": "",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Passport"
                }
            },
            "Visa": {
                "description": "",
                "required": [
                    "id",
                    "has_scan",
                    "number",
                    "issued_state",
                    "valid_to",
                    "valid_from",
                    "number_entries"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "issued_state": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "valid_to": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "valid_from": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "number_entries": {
                        "$ref": "#/components/schemas/VisaNumberEntries",
                        "description": ""
                    },
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "has_scan": {
                        "description": "",
                        "type": "boolean",
                        "readOnly": false
                    }
                },
                "example": {
                    "id": 512,
                    "has_scan": true,
                    "number": "33592222",
                    "issued_state": "Spain",
                    "valid_to": "2017-10-22",
                    "valid_from": "2017-09-08",
                    "number_entries": "1"
                }
            },
            "GetPassportResponse": {
                "description": "",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Passport"
                    }
                ]
            },
            "GetVisaResponse": {
                "description": "",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Visa"
                    }
                ]
            },
            "ExpandedPassport": {
                "description": "",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Passport"
                    },
                    {
                        "required": [
                            "visas"
                        ],
                        "properties": {
                            "visas": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Visa"
                                }
                            }
                        }
                    }
                ]
            },
            "GetExpandedPassportResponse": {
                "description": "",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ExpandedPassport"
                    }
                ]
            },
            "ListVacationsResponse": {
                "description": "",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Vacation"
                }
            },
            "Vacation": {
                "description": "",
                "required": [
                    "id",
                    "date_from",
                    "date_to"
                ],
                "type": "object",
                "properties": {
                    "date_from": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "date_to": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "integer"
                    }
                }
            },
            "GetVacationResponse": {
                "description": "",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Vacation"
                    }
                ]
            },
            "ListTrainingsResponse": {
                "description": "",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Training"
                }
            },
            "AddTrainingRequest": {
                "description": "",
                "required": [
                    "date_from",
                    "date_to",
                    "cost",
                    "issued_institution",
                    "program"
                ],
                "type": "object",
                "properties": {
                    "issued_institution": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "program": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "cost": {
                        "format": "int64",
                        "description": "cost per person, in their minor unit form",
                        "type": "integer"
                    },
                    "date_to": {
                        "format": "date",
                        "description": "end date of training",
                        "type": "string"
                    },
                    "date_from": {
                        "format": "date",
                        "description": "start date of training",
                        "type": "string"
                    }
                },
                "example": {
                    "issued_institution": "Yandex Practicum",
                    "program": "Advanced Go developer",
                    "cost": 12000000,
                    "date_to": "2023-01-10",
                    "date_from": "2023-07-10"
                }
            },
            "Training": {
                "description": "",
                "required": [
                    "id",
                    "has_scan",
                    "date_from",
                    "date_to",
                    "cost",
                    "issued_institution",
                    "program"
                ],
                "type": "object",
                "properties": {
                    "issued_institution": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "program": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "cost": {
                        "format": "int64",
                        "description": "cost per person, in their minor unit form",
                        "type": "integer"
                    },
                    "date_to": {
                        "format": "date",
                        "description": "end date of training",
                        "type": "string"
                    },
                    "date_from": {
                        "format": "date",
                        "description": "start date of training",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "has_scan": {
                        "description": "",
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "example": {
                    "issued_institution": "Yandex Practicum",
                    "program": "Advanced Go developer",
                    "cost": 12000000,
                    "date_to": "2023-01-10",
                    "date_from": "2023-07-10",
                    "id": 95,
                    "has_scan": true
                }
            },
            "GetTrainingResponse": {
                "description": "",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Training"
                    }
                ]
            },
            "PatchTrainingRequest": {
                "description": "",
                "minProperties": 1,
                "type": "object",
                "properties": {
                    "issued_institution": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "program": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "cost": {
                        "format": "int64",
                        "description": "cost per person, in their minor unit form",
                        "type": "integer"
                    },
                    "date_to": {
                        "format": "date",
                        "description": "end date of training",
                        "type": "string"
                    },
                    "date_from": {
                        "format": "date",
                        "description": "start date of training",
                        "type": "string"
                    }
                },
                "example": {
                    "date_to": "2023-01-10",
                    "date_from": "2023-07-10"
                }
            },
            "PutTrainingRequest": {
                "description": "",
                "required": [
                    "date_from",
                    "date_to",
                    "cost",
                    "issued_institution",
                    "program"
                ],
                "type": "object",
                "properties": {
                    "issued_institution": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "program": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "cost": {
                        "format": "int64",
                        "description": "cost per person, in their minor unit form",
                        "type": "integer"
                    },
                    "date_to": {
                        "format": "date",
                        "description": "end date of training",
                        "type": "string"
                    },
                    "date_from": {
                        "format": "date",
                        "description": "start date of training",
                        "type": "string"
                    }
                },
                "example": {
                    "issued_institution": "Yandex Practicum",
                    "program": "Advanced Go developer",
                    "cost": 12000000,
                    "date_to": "2023-01-10",
                    "date_from": "2023-07-10"
                }
            },
            "PatchVacationRequest": {
                "description": "",
                "minProperties": 1,
                "type": "object",
                "properties": {
                    "date_from": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "date_to": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "AddVacationRequest": {
                "description": "",
                "required": [
                    "date_from",
                    "date_to"
                ],
                "type": "object",
                "properties": {
                    "date_from": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "date_to": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "PutVacationRequest": {
                "description": "",
                "required": [
                    "date_from",
                    "date_to"
                ],
                "type": "object",
                "properties": {
                    "date_from": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "date_to": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    }
                },
                "example": {
                    "date_from": "2018-01-17",
                    "date_to": "2018-02-07"
                }
            },
            "GetScanResponse": {
                "$ref": "#/components/schemas/Scan",
                "description": ""
            },
            "ListScansResponse": {
                "description": "",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Scan"
                },
                "example": [
                    {
                        "id": 7,
                        "upload_at": "2019-03-10T09:30Z",
                        "type": "passport",
                        "document_id": 7
                    },
                    {
                        "id": 81,
                        "upload_at": "2018-02-10T09:30Z",
                        "type": "baby_birth",
                        "description": "not verified by social services"
                    }
                ]
            },
            "Scan": {
                "description": "",
                "required": [
                    "id",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer",
                        "example": 3
                    },
                    "type": {
                        "$ref": "#/components/schemas/ScanType",
                        "description": ""
                    },
                    "document_id": {
                        "description": "document ID (if necessary), passport ID for passport scan, for example",
                        "type": "integer",
                        "example": "1"
                    },
                    "description": {
                        "description": "",
                        "maxLength": 150,
                        "type": "string",
                        "example": "Краткое описание документа"
                    },
                    "url": {
                        "description": "URL to directly download objects (HTTP GET operations)",
                        "type": "string",
                        "example": ""
                    },
                    "upload_at": {
                        "format": "date-time",
                        "description": "an upload date-time as defined by full-date - RFC3339",
                        "type": "string",
                        "example": "2019-08-24T14:15:22Z"
                    }
                },
                "example": {
                    "id": 81,
                    "upload_at": "2018-02-10T09:30Z",
                    "type": "baby_birth",
                    "description": "not verified by social services"
                }
            },
            "PassportType": {
                "description": "",
                "default": "internal",
                "enum": [
                    "internal",
                    "external",
                    "foreigners"
                ],
                "type": "string"
            },
            "AddPassportRequest": {
                "description": "",
                "required": [
                    "number",
                    "issued_date",
                    "issued_by",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "issued_date": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "issued_by": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/PassportType",
                        "description": ""
                    }
                },
                "example": {
                    "number": "33592222",
                    "issued_date": "2016-05-15",
                    "issued_by": "Washington D.C. U.S.A.",
                    "type": "foreigners"
                }
            },
            "Passport": {
                "description": "",
                "required": [
                    "id",
                    "number",
                    "issued_date",
                    "issued_by",
                    "type",
                    "has_scan",
                    "visas_count"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "issued_date": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "issued_by": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/PassportType",
                        "description": ""
                    },
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "has_scan": {
                        "description": "",
                        "type": "boolean",
                        "readOnly": false
                    },
                    "visas_count": {
                        "description": "",
                        "type": "integer"
                    }
                },
                "example": {
                    "id": 547,
                    "has_scan": false,
                    "number": "33592222",
                    "issued_date": "2016-05-15",
                    "issued_by": "Washington D.C. U.S.A.",
                    "type": "foreigners"
                }
            },
            "PatchPassportRequest": {
                "description": "",
                "minProperties": 1,
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "issued_date": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "issued_by": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/PassportType",
                        "description": ""
                    }
                },
                "example": {
                    "number": "33592222"
                }
            },
            "PutPassportRequest": {
                "description": "",
                "required": [
                    "number",
                    "issued_date",
                    "issued_by",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "issued_date": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "issued_by": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/PassportType",
                        "description": ""
                    }
                },
                "example": {
                    "number": "33592222",
                    "issued_date": "2016-05-15",
                    "issued_by": "Washington D.C. U.S.A.",
                    "type": "foreigners"
                }
            },
            "ContractType": {
                "description": "",
                "enum": [
                    "temporary",
                    "permanent"
                ],
                "type": "string"
            },
            "Contract": {
                "description": "",
                "required": [
                    "id",
                    "has_scan",
                    "date_from",
                    "type",
                    "number"
                ],
                "type": "object",
                "properties": {
                    "date_from": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "date_to": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ContractType",
                        "description": ""
                    },
                    "number": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "has_scan": {
                        "description": "",
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "example": {
                    "id": 127,
                    "has_scan": true,
                    "date_from": "2018-01-17",
                    "date_to": "2020-01-17",
                    "type": "temporary",
                    "number": "145678"
                }
            },
            "PatchContractRequest": {
                "minProperties": 1,
                "type": "object",
                "properties": {
                    "date_from": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "date_to": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ContractType",
                        "description": ""
                    },
                    "number": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    }
                },
                "example": {
                    "number": "145678"
                }
            },
            "PutContractRequest": {
                "description": "",
                "required": [
                    "number",
                    "type",
                    "date_from"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ContractType",
                        "description": ""
                    },
                    "work_type_id": {
                        "type": "integer",
                        "description": ""
                    },
                    "probation_period": {
                        "type": "integer",
                        "description": ""
                    },
                    "date_from": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "date_to": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    }
                },
                "example": {
                    "date_from": "2018-01-17",
                    "date_to": "2020-01-17",
                    "type": "temporary",
                    "number": "145678"
                }
            },
            "VisaNumberEntries": {
                "description": "",
                "enum": [
                    "1",
                    "2",
                    "mult"
                ],
                "type": "string"
            },
            "PutVisaRequest": {
                "description": "",
                "required": [
                    "number",
                    "issued_state",
                    "valid_to",
                    "valid_from",
                    "number_entries"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "issued_state": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "valid_to": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "valid_from": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "number_entries": {
                        "$ref": "#/components/schemas/VisaNumberEntries",
                        "description": ""
                    }
                },
                "example": {
                    "number": "33592222",
                    "issued_state": "Spain",
                    "valid_to": "2017-10-22",
                    "valid_from": "2017-09-08",
                    "number_entries": "1"
                }
            },
            "PatchVisaRequest": {
                "description": "",
                "minProperties": 1,
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "issued_state": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "valid_to": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "valid_from": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "number_entries": {
                        "$ref": "#/components/schemas/VisaNumberEntries",
                        "description": ""
                    }
                },
                "example": {
                    "number_entries": "2"
                }
            },
            "AddVisaRequest": {
                "description": "",
                "required": [
                    "number",
                    "issued_state",
                    "valid_to",
                    "valid_from",
                    "number_entries"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "issued_state": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "valid_to": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "valid_from": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "number_entries": {
                        "$ref": "#/components/schemas/VisaNumberEntries",
                        "description": ""
                    }
                },
                "example": {
                    "number": "33592222",
                    "issued_state": "Spain",
                    "valid_to": "2017-10-22",
                    "valid_from": "2017-09-08",
                    "number_entries": "1"
                }
            },
            "Gender": {
                "description": "",
                "enum": [
                    "male",
                    "female"
                ],
                "type": "string"
            },
            "Department": {
                "description": "",
                "required": [
                    "name",
                    "users_number",
                    "id",
                    "recruited_users_number"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "users_number": {
                        "description": "current number of working employees",
                        "type": "integer"
                    },
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "recruited_users_number": {
                        "description": "number of recruited employees",
                        "type": "integer"
                    }
                }
            },
            "GetExpandedUserResponse": {
                "description": "",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/GetUserResponse"
                    },
                    {
                        "required": [
                            "passports",
                            "contracts",
                            "vacations",
                            "educations",
                            "trainings",
                            "id"
                        ],
                        "type": "object",
                        "properties": {
                            "id": {
                                "description": "",
                                "type": "integer"
                            },
                            "passports": {
                                "description": "",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ExpandedPassport"
                                }
                            },
                            "contracts": {
                                "description": "",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Contract"
                                }
                            },
                            "vacations": {
                                "description": "",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Vacation"
                                }
                            },
                            "educations": {
                                "description": "",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Education"
                                }
                            },
                            "trainings": {
                                "description": "",
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Training"
                                }
                            }
                        }
                    }
                ],
                "example": {
                    "id": 93,
                    "first_name": "Улугбек",
                    "last_name": "Акрамов",
                    "middle_name": "Рашидович",
                    "position_id": 2,
                    "department": 8,
                    "email": "akramovur@rogakopyta.net",
                    "phone_numbers": {
                        "mobile": "79999999999",
                        "office": "123456"
                    },
                    "passports": [
                        {
                            "id": 67,
                            "number": "AZ0001055",
                            "issued_date": "2010-05-23",
                            "issued_by": "TOSHKENT SHAHAR IIBB",
                            "type": "foreigners",
                            "has_scan": true,
                            "visas_count": 1
                        }
                    ],
                    "contracts": [
                        {
                            "date_from": "2013-08-01",
                            "date_to": "2013-09-04",
                            "type": "temporary",
                            "number": "12345"
                        }
                    ],
                    "work_permit": {
                        "number": "77121034092",
                        "valid_to": "2013-09-05",
                        "has_scan": true
                    },
                    "grade": "2",
                    "working_model": "in-office",
                    "date_of_birth": "1994-05-26",
                    "place_of_birth": "Ташкент",
                    "registration_address": "Санкт-Петербург, наб. реки Мойки, 27",
                    "residential_address": "Санкт-Петербург, наб. реки Мойки, 27",
                    "nationality": "Узбекистан",
                    "gender": "male",
                    "position_track": [
                        {
                            "date_from": "2018-01-17",
                            "date_to": "2018-01-17",
                            "position_id": 15
                        },
                        {
                            "date_from": "2018-01-17",
                            "date_to": "2018-01-17",
                            "position_id": 82
                        }
                    ],
                    "personal_data_processing": {
                        "has_scan": true
                    }
                }
            },
            "PositionTrack": {
                "description": "",
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/PositionTrackItem"
                },
                "example": [
                    {
                        "date_from": "2018-01-17",
                        "date_to": "2018-03-17",
                        "position_id": 3
                    },
                    {
                        "date_from": "2018-03-18",
                        "date_to": "2018-05-18",
                        "position_id": 2
                    },
                    {
                        "date_from": "2018-05-19",
                        "position_id": 7
                    }
                ],
                "x-go-type-skip-optional-pointer": true
            },
            "PatchEducationRequest": {
                "description": "",
                "minProperties": 1,
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "issued_institution": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "date_to": {
                        "format": "date",
                        "description": "date of graduation",
                        "type": "string"
                    },
                    "date_from": {
                        "format": "date",
                        "description": "date of commencement of studies",
                        "type": "string"
                    },
                    "program": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    }
                },
                "example": {
                    "program": "Связи с общественностью"
                }
            },
            "PhoneNumbers": {
                "type": "object",
                "additionalProperties": {
                    "maxLength": 15,
                    "minLength": 2,
                    "type": "string"
                },
                "example": {
                    "mobile": "79999999999",
                    "office": "123456"
                },
                "x-go-type-skip-optional-pointer": true
            },
            "PutUserRequest": {
                "description": "",
                "required": [
                    "first_name",
                    "last_name",
                    "middle_name",
                    "position_id",
                    "department_id",
                    "grade",
                    "phone_numbers",
                    "date_of_birth",
                    "gender",
                    "place_of_birth",
                    "registration_address",
                    "residential_address",
                    "nationality",
                    "taxpayer",
                    "insurance",
                    "email",
                    "position_track"
                ],
                "type": "object",
                "properties": {
                    "first_name": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "last_name": {
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "middle_name": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "position_id": {
                        "description": "",
                        "type": "integer"
                    },
                    "department_id": {
                        "description": "",
                        "type": "integer"
                    },
                    "email": {
                        "format": "email",
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "phone_numbers": {
                        "$ref": "#/components/schemas/PhoneNumbers",
                        "description": ""
                    },
                    "grade": {
                        "description": "",
                        "maxLength": 1,
                        "minLength": 1,
                        "type": "string"
                    },
                    "working_model": {
                        "$ref": "#/components/schemas/WorkingModel",
                        "description": ""
                    },
                    "date_of_birth": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "gender": {
                        "$ref": "#/components/schemas/Gender"
                    },
                    "place_of_birth": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "registration_address": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "residential_address": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "nationality": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "foreign_languages": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "maxLength": 50,
                            "minLength": 2,
                            "type": "string"
                        },
                        "x-go-type-skip-optional-pointer": true
                    },
                    "military": {
                        "$ref": "#/components/schemas/Military",
                        "description": ""
                    },
                    "taxpayer": {
                        "$ref": "#/components/schemas/Taxpayer",
                        "description": ""
                    },
                    "insurance": {
                        "$ref": "#/components/schemas/Insurance"
                    },
                    "work_permit": {
                        "$ref": "#/components/schemas/WorkPermit",
                        "description": ""
                    },
                    "position_track": {
                        "$ref": "#/components/schemas/PositionTrack",
                        "description": ""
                    }
                },
                "example": {
                    "first_name": "Alexander",
                    "last_name": "Pushkin",
                    "middle_name": "Sergeyevich",
                    "position_id": 2,
                    "department_id": 3,
                    "email": "pushkin@dantes.net",
                    "phone_numbers": [
                        {
                            "number": "799183712345",
                            "type": "mobile"
                        },
                        {
                            "number": "1837",
                            "type": "office"
                        }
                    ],
                    "grade": "1",
                    "working_model": "remote",
                    "date_of_birth": "1799-06-06",
                    "gender": "male",
                    "place_of_birth": "Москва",
                    "registration_address": "Санкт-Петербург, наб. реки Мойки, 12",
                    "residential_address": "Санкт-Петербург, наб. реки Мойки, 12",
                    "nationality": "Царская Россия",
                    "foreign_languages": [
                        "english",
                        "french"
                    ],
                    "military": {
                        "rank": "Старший лейтенант",
                        "speciality": "101182",
                        "category": "А2",
                        "comissariat": "Военный комиссариат Петроградского района г. Санкт-Петербурга"
                    },
                    "taxpayer": {
                        "number": "500100732259"
                    },
                    "insurance": {
                        "number": "08336732477"
                    },
                    "position_track": [
                        {
                            "date_from": "2018-01-17",
                            "date_to": "2018-01-17",
                            "position_id": 15
                        },
                        {
                            "date_from": "2018-01-17",
                            "date_to": "2018-01-17",
                            "position_id": 82
                        }
                    ]
                }
            },
            "PatchUserRequest": {
                "minProperties": 1,
                "type": "object",
                "properties": {
                    "first_name": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "last_name": {
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "middle_name": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "position_id": {
                        "description": "",
                        "type": "integer"
                    },
                    "department_id": {
                        "description": "",
                        "type": "integer"
                    },
                    "email": {
                        "format": "email",
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "phone_numbers": {
                        "$ref": "#/components/schemas/PhoneNumbers",
                        "description": ""
                    },
                    "grade": {
                        "description": "",
                        "maxLength": 1,
                        "minLength": 1,
                        "type": "string"
                    },
                    "working_model": {
                        "$ref": "#/components/schemas/WorkingModel",
                        "description": ""
                    },
                    "date_of_birth": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "gender": {
                        "$ref": "#/components/schemas/Gender"
                    },
                    "place_of_birth": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "registration_address": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "residential_address": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "nationality": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "foreign_languages": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "maxLength": 50,
                            "minLength": 2,
                            "type": "string"
                        },
                        "x-go-type-skip-optional-pointer": true
                    },
                    "military": {
                        "$ref": "#/components/schemas/Military",
                        "description": ""
                    },
                    "taxpayer": {
                        "$ref": "#/components/schemas/Taxpayer",
                        "description": ""
                    },
                    "insurance": {
                        "$ref": "#/components/schemas/Insurance"
                    },
                    "work_permit": {
                        "$ref": "#/components/schemas/WorkPermit",
                        "description": ""
                    },
                    "position_track": {
                        "$ref": "#/components/schemas/PositionTrack",
                        "description": ""
                    }
                }
            },
            "GetUserResponse": {
                "description": "",
                "required": [
                    "first_name",
                    "last_name",
                    "middle_name",
                    "position_id",
                    "department_id",
                    "grade",
                    "phone_numbers",
                    "date_of_birth",
                    "gender",
                    "place_of_birth",
                    "registration_address",
                    "residential_address",
                    "nationality",
                    "taxpayer",
                    "insurance",
                    "email",
                    "position_track",
                    "personal_data_processing",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "first_name": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "last_name": {
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "middle_name": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "position_id": {
                        "description": "",
                        "type": "integer"
                    },
                    "department_id": {
                        "description": "",
                        "type": "integer"
                    },
                    "email": {
                        "format": "email",
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "phone_numbers": {
                        "$ref": "#/components/schemas/PhoneNumbers",
                        "description": ""
                    },
                    "grade": {
                        "description": "",
                        "maxLength": 1,
                        "minLength": 1,
                        "type": "string"
                    },
                    "working_model": {
                        "$ref": "#/components/schemas/WorkingModel",
                        "description": ""
                    },
                    "date_of_birth": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "gender": {
                        "$ref": "#/components/schemas/Gender",
                        "description": ""
                    },
                    "place_of_birth": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "registration_address": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "residential_address": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "nationality": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "foreign_languages": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "maxLength": 50,
                            "minLength": 2,
                            "type": "string"
                        },
                        "x-go-type-skip-optional-pointer": true
                    },
                    "military": {
                        "$ref": "#/components/schemas/Military",
                        "description": ""
                    },
                    "taxpayer": {
                        "$ref": "#/components/schemas/Taxpayer",
                        "description": ""
                    },
                    "insurance": {
                        "$ref": "#/components/schemas/Insurance"
                    },
                    "work_permit": {
                        "$ref": "#/components/schemas/WorkPermit",
                        "description": ""
                    },
                    "position_track": {
                        "$ref": "#/components/schemas/PositionTrack",
                        "description": ""
                    },
                    "personal_data_processing": {
                        "$ref": "#/components/schemas/PersonalDataProcessing",
                        "description": ""
                    },
                    "finance": {
                        "$ref": "#/components/schemas/UserFinance",
                        "description": ""
                    }
                },
                "example": {
                    "id": 53,
                    "first_name": "Alexander",
                    "last_name": "Pushkin",
                    "middle_name": "Sergeyevich",
                    "position_id": 35,
                    "department_id": 69,
                    "email": "pushkin@dantes.net",
                    "phone_numbers": [
                        {
                            "number": "799183712345",
                            "type": "mobile"
                        },
                        {
                            "number": "1837",
                            "type": "office"
                        }
                    ],
                    "grade": "1",
                    "working_model": "remote",
                    "date_of_birth": "1799-06-06",
                    "gender": "male",
                    "place_of_birth": "Москва",
                    "registration_address": "Санкт-Петербург, наб. реки Мойки, 12",
                    "residential_address": "Санкт-Петербург, наб. реки Мойки, 12",
                    "nationality": "Царская Россия",
                    "foreign_languages": [
                        "english",
                        "french"
                    ],
                    "military": {
                        "rank": "Старший лейтенант",
                        "speciality": "101182",
                        "category": "А2",
                        "comissariat": "Военный комиссариат Петроградского района г. Санкт-Петербурга",
                        "has_scan": true
                    },
                    "taxpayer": {
                        "number": 500100732259,
                        "has_scan": true
                    },
                    "insurance": {
                        "number": "08336732477",
                        "has_scan": true
                    },
                    "position_track": [
                        {
                            "date_from": "2018-01-17",
                            "date_to": "2018-01-17",
                            "position_id": 15
                        },
                        {
                            "date_from": "2018-01-17",
                            "date_to": "2018-01-17",
                            "position_id": 82
                        }
                    ],
                    "personal_data_processing": {
                        "has_scan": true
                    }
                }
            },
            "AddUserRequest": {
                "description": "",
                "required": [
                    "first_name",
                    "last_name",
                    "middle_name",
                    "position_id",
                    "department_id",
                    "grade",
                    "phone_numbers",
                    "date_of_birth",
                    "gender",
                    "place_of_birth",
                    "registration_address",
                    "residential_address",
                    "nationality",
                    "taxpayer",
                    "insurance",
                    "email",
                    "position_track"
                ],
                "type": "object",
                "properties": {
                    "first_name": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "last_name": {
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "middle_name": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "position_id": {
                        "description": "",
                        "type": "integer"
                    },
                    "department_id": {
                        "description": "",
                        "type": "integer"
                    },
                    "email": {
                        "format": "email",
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "phone_numbers": {
                        "$ref": "#/components/schemas/PhoneNumbers",
                        "description": ""
                    },
                    "grade": {
                        "description": "",
                        "maxLength": 1,
                        "minLength": 1,
                        "type": "string"
                    },
                    "working_model": {
                        "$ref": "#/components/schemas/WorkingModel",
                        "description": ""
                    },
                    "date_of_birth": {
                        "format": "date",
                        "description": "",
                        "type": "string"
                    },
                    "gender": {
                        "$ref": "#/components/schemas/Gender"
                    },
                    "place_of_birth": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "registration_address": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "residential_address": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "nationality": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "foreign_languages": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "maxLength": 50,
                            "minLength": 2,
                            "type": "string"
                        },
                        "x-go-type-skip-optional-pointer": true
                    },
                    "military": {
                        "$ref": "#/components/schemas/Military",
                        "description": ""
                    },
                    "taxpayer": {
                        "$ref": "#/components/schemas/Taxpayer",
                        "description": ""
                    },
                    "insurance": {
                        "$ref": "#/components/schemas/Insurance"
                    },
                    "work_permit": {
                        "$ref": "#/components/schemas/WorkPermit",
                        "description": ""
                    },
                    "position_track": {
                        "$ref": "#/components/schemas/PositionTrack",
                        "description": ""
                    }
                },
                "example": {
                    "id": 1,
                    "first_name": "Alexander",
                    "last_name": "Pushkin",
                    "middle_name": "Sergeyevich",
                    "position_id": 2,
                    "department_id": 3,
                    "email": "pushkin@dantes.net",
                    "phone_numbers": [
                        {
                            "number": "799183712345",
                            "type": "mobile"
                        },
                        {
                            "number": "1837",
                            "type": "office"
                        }
                    ],
                    "grade": "1",
                    "working_model": "remote",
                    "date_of_birth": "1799-06-06",
                    "gender": "male",
                    "place_of_birth": "Москва",
                    "registration_address": "Санкт-Петербург, наб. реки Мойки, 12",
                    "residential_address": "Санкт-Петербург, наб. реки Мойки, 12",
                    "nationality": "Царская Россия",
                    "foreign_languages": [
                        "english",
                        "french"
                    ],
                    "military": {
                        "rank": "Старший лейтенант",
                        "speciality": "101182",
                        "category": "А2",
                        "comissariat": "Военный комиссариат Петроградского района г. Санкт-Петербурга"
                    },
                    "taxpayer": {
                        "number": "500100732259"
                    },
                    "insurance": {
                        "number": "08336732477"
                    },
                    "position_track": [
                        {
                            "date_from": "2018-01-17",
                            "date_to": "2018-01-17",
                            "position_id": 15
                        },
                        {
                            "date_from": "2018-01-17",
                            "date_to": "2018-01-17",
                            "position_id": 82
                        }
                    ]
                }
            },
            "ChangePasswordRequest": {
                "description": "",
                "required": [
                    "key",
                    "password"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "description": "a special key sent to the employee’s email",
                        "maxLength": 36,
                        "minLength": 36,
                        "type": "string"
                    },
                    "password": {
                        "format": "password",
                        "description": "a new employee password",
                        "maxLength": 15,
                        "minLength": 8,
                        "type": "string"
                    }
                },
                "example": {
                    "key": "0LzQsNC80LAg0LzRi9C70LAg0YDQsNC80YM=",
                    "password": "pa$$word"
                }
            },
            "AddEducationRequest": {
                "description": "",
                "required": [
                    "date_from",
                    "date_to",
                    "program",
                    "issued_institution",
                    "number"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "issued_institution": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "date_to": {
                        "format": "date",
                        "description": "date of graduation",
                        "type": "string"
                    },
                    "date_from": {
                        "format": "date",
                        "description": "date of commencement of studies",
                        "type": "string"
                    },
                    "program": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    }
                },
                "example": {
                    "number": "1030180354933",
                    "date_to": "2015-01-01",
                    "date_from": "2011-01-01",
                    "issued_institution": "ФГБОУ ВО «Астраханский государственный университет им. В. Н. Татищева»",
                    "program": "Связи с общественностью"
                }
            },
            "PutEducationRequest": {
                "description": "",
                "required": [
                    "date_from",
                    "date_to",
                    "program",
                    "issued_institution",
                    "number"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "issued_institution": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "date_to": {
                        "format": "date",
                        "description": "date of graduation",
                        "type": "string"
                    },
                    "date_from": {
                        "format": "date",
                        "description": "date of commencement of studies",
                        "type": "string"
                    },
                    "program": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    }
                },
                "example": {
                    "number": "1030180354933",
                    "date_to": "2015-01-01",
                    "date_from": "2011-01-01",
                    "issued_institution": "ФГБОУ ВО «Астраханский государственный университет им. В. Н. Татищева»",
                    "program": "Связи с общественностью"
                }
            },
            "Education": {
                "description": "",
                "required": [
                    "id",
                    "has_scan",
                    "date_from",
                    "date_to",
                    "program",
                    "issued_institution",
                    "number"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "description": "",
                        "maxLength": 50,
                        "minLength": 2,
                        "type": "string"
                    },
                    "issued_institution": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    },
                    "date_to": {
                        "format": "date",
                        "description": "date of graduation",
                        "type": "string"
                    },
                    "date_from": {
                        "format": "date",
                        "description": "date of commencement of studies",
                        "type": "string"
                    },
                    "id": {
                        "description": "",
                        "type": "integer"
                    },
                    "has_scan": {
                        "description": "",
                        "type": "boolean",
                        "readOnly": true
                    },
                    "program": {
                        "description": "",
                        "maxLength": 150,
                        "minLength": 2,
                        "type": "string"
                    }
                },
                "example": {
                    "id": 578,
                    "has_scan": true,
                    "number": "1030180354933",
                    "date_to": "2015-01-01",
                    "date_from": "2011-01-01",
                    "issued_institution": "ФГБОУ ВО «Астраханский государственный университет им. В. Н. Татищева»",
                    "program": "Связи с общественностью"
                }
            },
            "PositionTrackItem": {
                "description": "",
                "required": [
                    "date_from",
                    "position"
                ],
                "type": "object",
                "properties": {
                    "date_from": {
                        "format": "date",
                        "type": "string"
                    },
                    "date_to": {
                        "format": "date",
                        "type": "string"
                    },
                    "position": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "scheme": "bearer",
                "bearerFormat": "PASETO",
                "type": "http",
                "description": "auth: login+password, returned PASETO token in cookies"
            }
        }
    }
}